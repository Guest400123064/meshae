[project]
name = "meshae"
version = "0.1.0"
description = "Simple mesh auto-encoder for mesh tokenization."
authors = [
    {name = "guest400123064", email = "wangy49@alumni.upenn.edu"},
    {name = "M4D-SC1ENTIST", email = "xiatao.sun@yale.edu"}
]
license = {file = "LICENSE"}
readme = "README.md"
packages = [
    {include = "meshae", from = "src"}
]
requires-python = ">=3.10"
dependencies = [
    "trimesh (>=4.6.8,<5.0.0)",
    "vector-quantize-pytorch (>=1.22.15,<2.0.0)",
    "beartype (>=0.20.2,<0.21.0)",
    "torchtyping (>=0.1.5,<0.2.0)",
    "pytorch-accelerated (>=0.1.52,<0.2.0)",
    "torch-geometric (>=2.6.1,<3.0.0)",
    "x-transformers (>=2.4.12,<3.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
bpython = "^0.25"
ipykernel = "^6.29.5"
seaborn = "^0.13.2"
ipywidgets = "^8.1.6"
ruff = "^0.11.6"
pdoc = "^15.0.2"
pre-commit = "^4.2.0"
wandb = "^0.19.10"

[tool.poetry.group.data.dependencies]
objaverse = "^0.1.7"

[tool.ruff.lint]
ignore = ["F401"]

[tool.basedpyright]
reportAny = false
reportUnusedCallResult = false
reportUnannotatedClassAttribute = false
